---
- name: Copy dotfiles to home directory
  ansible.builtin.copy:
    src: "{{ role_path }}/files/{{ item }}"
    dest: "{{ ansible_env.HOME }}/.{{ item }}"
    owner: "{{ ansible_env.USER }}"
    mode: "0644"
  with_items:
    - bash_settings
    - gitattributes
    - gitignore
    - gitmessage
    - ideavimrc
    - tmux.conf
    - vimrc
    - zsh_settings

- name: Create Development directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/Development"
    state: directory
    owner: "{{ ansible_env.USER }}"
    mode: "0755"

- name: Create .gitconfig in home directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.gitconfig"
    state: touch
    owner: "{{ ansible_env.USER }}"
    mode: "0644"

- name: Copy gitconfig to Development directory
  ansible.builtin.copy:
    src: "{{ role_path }}/files/gitconfig"
    dest: "{{ ansible_env.HOME }}/Development/.gitconfig"
    owner: "{{ ansible_env.USER }}"
    mode: "0644"

- name: Append gitconfig includeIf to global gitconfig
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.gitconfig"
    marker: "# {mark} Import gitconfig for Development directory"
    block: |
      [include]
        path = ~/Development/.gitconfig

- name: Create rc files if missing
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/{{ item }}"
    state: touch
    owner: "{{ ansible_env.USER }}"
    mode: "0644"
  loop:
    - ".zshrc"
    - ".bashrc"

- name: Import shell settings
  ansible.builtin.lineinfile:
    dest: "{{ ansible_env.HOME }}/{{ item.rc_file }}"
    line: "source {{ ansible_env.HOME }}/{{ item.setting }}"
    state: present
  loop:
    - { rc_file: ".zshrc", setting: ".zsh_settings" }
    - { rc_file: ".bashrc", setting: ".bash_settings" }

- name: Use starship in shells if available
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/{{ item.rc_file }}"
    marker: "# {mark} Starship prompt for {{ item.shell }}"
    block: |
      if command -v starship; then
        eval "$(starship init {{ item.shell }})"
      fi
  loop:
    - { shell: "zsh", rc_file: ".zshrc" }
    - { shell: "bash", rc_file: ".bashrc" }

- name: Configure for common use
  ansible.builtin.copy:
    src: "{{ role_path }}/configurations/{{ item.config }}"
    dest: "{{ ansible_env.HOME }}/.config/"
    owner: "{{ ansible_env.USER }}"
    mode: "0755"
    follow: true
  when: item.name in dependencies_list
  loop:
    - { name: "neovim", config: "nvim" }
