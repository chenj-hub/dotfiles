[color]
  interactive = true
  branch = true
  status = true
[core]
  editor = nvim
  autocrlf = input
  pager = less -FMRiX
[commit]
  template = ~/.gitmessage
  verbose = true
[color]
  ui = auto
[color "diff"]
  meta = yellow bold
  commit = green bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
  newMoved = cyan
  oldMoved = blue
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = "red bold 52"
  newNormal = "green bold"
  newHighlight = "green bold 22"
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[diff]
  colorMoved = zebra
  algorithm = patience
[alias]
  db = "!git remote show origin | sed -n '/HEAD branch/s/.*: //p'"
  au = add -u
  co = checkout
  com = "!git checkout $(git db)"
  cob = "!checkoutBranch(){ git checkout $1 || git checkout -b $1; }; checkoutBranch"
  clean-branches = "!git branch | grep -vE $(git db) | xargs -n 1 git branch -D"
  d = diff --color --color-words --abbrev
  last = log -1 HEAD
  lol = log --graph --decorate --oneline
  lola = log --graph --decorate --oneline --all
  prune = fetch --prune
  pu = push origin HEAD
  ru = reset --hard @{upstream}
  rull = !git fetch && git reset --hard @{upstream}
  st = status -s
  stash-all = stash save --include-untracked
  unstage = reset HEAD --
  dag = log --graph --format='format:%C(yellow)%h%C(reset) %C(blue)%an <%ae>%C(reset) %C(magenta)%cr%C(reset)%C(auto)%d%C(reset)%n%s' --date-order
  tree = log --graph --all --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
  branch-recent = for-each-ref --sort=committerdate refs/heads/ --format=%(committerdate) %(refname:short)
[merge]
  ff = only
[push]
  default = simple
  followTags = true
[transfer]
  fsckobjects = true
[status]
  showuntrackedfiles = no
[include]
  path = ~/Development/.gitconfig.local
